{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Transport layer - logical end-end transport\
\
Send side - message segmentation\
Receiving side - reassembles\
\
Transport layer vs network layer?\
\
Transport layer is communication between END HOSTS\
\
End-end.. it relies on the network layer services\
\
Network layer is communication between nodes \
Think of network layer protocol as the postal service, transport protocol as representatives and hosts as houses\
\
Think of multiplexing and de multiplexing as processing\
\
Demultiplexing: delivering received segments to correct socket (delivery truck)\
\
Multiplexing : gathering data from multiple sockets, enveloping them with a header\
\
Host receives IP data grams\
\
Datagram has source ip, dest ip\
Datagram has 1 transport layer segment, this segment has source, destination port number\
The host will use ip addresses and port numbers to direct segment to appropriate socket \
\
Created socket has host-local port\
\
When host receives UDP segment, checks dest port #, directs to socket with that port #\
\
Datagrams with different source IP addresses and or source port numbers directed to same socket at dest\
\
UDP: \
\
Why is there UDP? \
-No connection establishments\
-Simple\
Small segment header\
No congestion control - quick\
\
Udp for multimedia apps\
Dns uses ump\
\
Udp checksum detect errors in transmitted segment}